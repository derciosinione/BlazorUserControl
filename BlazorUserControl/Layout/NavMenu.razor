@using Application.Modules.ContentManagement.Contracts.Menus.Response
@using Application.Modules.ContentManagement.Repositories.Interface
@using Application.Provider
@inject IContentManagementService ContentManagementService
@inject AppAuthStateProvider AuthenticationStateProvider

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">User Control</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass nav-scrollable" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="@Routes.Dashboard" Match="NavLinkMatch.All">
                <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> Home
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="@Routes.Counter">
                <span class="bi bi-plus-square-fill-nav-menu" aria-hidden="true"></span> Counter
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="@Routes.Weather">
                <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> Weather
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="@Routes.Users">
                <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> User Manager
            </NavLink>
        </div>

        @if (MenuContext != null)
        {
            foreach (var menu in MenuContext.Menus!)
            {
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="@menu.Action">
                        <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> @menu.Name
                    </NavLink>
                </div>
            }
        }
    </nav>
</div>

@code {
    private bool _collapseNavMenu = true;
    private string? NavMenuCssClass => _collapseNavMenu ? "collapse" : null;

    private ContextResponse? MenuContext { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var userInfo = await AuthenticationStateProvider.GetUserInfo();

        var result = await ContentManagementService.GetContextMenuByType(userInfo!.Role!);

        if (result.IsSuccess) MenuContext = result.Value;
    }

    private void ToggleNavMenu()
    {
        _collapseNavMenu = !_collapseNavMenu;
    }

}